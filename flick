#!/usr/bin/env php
<?php

$commands = [
    'cache:generate' => function ($arguments) {
        $name = $arguments[0] ?? null;
        if ($name) {
            echo "Generate image cache for " . $name . "\n";
        } else {
            echo "Error: Model name is required.\n";
        }
    },
    'cache:regenerate' => function ($arguments) {
        $name = $arguments[0] ?? null;
        if ($name) {
            echo "Regenerate image cache for " . $name . "\n";
        } else {
            echo "Regenerate full image cache\n";
        }
    },
    'serve' => function ($arguments) {
        $port = 8000;
        $host = 'localhost';
        $documentRoot = 'public';

        // Check if the port is available
        while (!isPortAvailable($host, $port)) {
            $port++;
        }

        echo "Starting flick development server on http://$host:$port\n";
        echo "Press Ctrl-C to stop the server\n";

        // Start the PHP built-in server
        exec("php -S $host:$port -t $documentRoot");
    },
];

// Get the command and arguments from the input
$command = $argv[1] ?? null;
$arguments = array_slice($argv, 2);

if (!$command || !array_key_exists($command, $commands)) {
    echo "Available commands:\n";
    foreach ($commands as $cmd => $callback) {
        echo "  - $cmd\n";
    }
    exit(1);
}

// Execute the command
$commands[$command]($arguments);

// Function to check if a port is available
function isPortAvailable($host, $port)
{
    $connection = @fsockopen($host, $port);

    if (is_resource($connection)) {
        fclose($connection);
        return false;
    }

    return true;
}
